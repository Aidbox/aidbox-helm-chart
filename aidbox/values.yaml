host: my.domain.tld
protocol: http

config:
  AIDBOX_BOX_ID: aidbox
  AIDBOX_PORT: 8080
  BOX_INSTANCE_NAME: aidbox
  BOX_METRICS_PORT: 8765
  PGDATABASE: aidbox
  PGPORT: 5432

secrets:
  AIDBOX_ADMIN_ID: admin
  AIDBOX_ADMIN_PASSWORD: ""
  AIDBOX_CLIENT_ID: admin
  AIDBOX_CLIENT_SECRET: ""
  # AIDBOX_LICENSE: ""
  # or
  # AIDBOX_LICENSE_ID: ""
  # AIDBOX_LICENSE_KEY: ""
  PGUSER: ""
  PGPASSWORD: ""


image:
  repository: healthsamurai/aidboxone
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"

livenessProbe:
  httpGet:
    path: /health
    port: api
  periodSeconds: 10
  failureThreshold: 10
readinessProbe:
  httpGet:
    path: /health
    port: api
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 5
startupProbe:
  httpGet:
    path: /health
    port: api
  initialDelaySeconds: 20
  periodSeconds:  5
  failureThreshold: 10

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

resources:
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  requests:
    cpu: 500m
    memory: 256Mi

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

service:
  type: ClusterIP
  apiPort: 80
  metricsPort: 80

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
